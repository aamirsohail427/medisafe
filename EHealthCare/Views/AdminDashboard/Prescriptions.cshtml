@model EHealthCare.Models.AdminViewModel
@{
                /**/

                ViewBag.Title = "Prescriptions";
                Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .select2-container {
        width: 411.5px !important;
    }
</style>

@Html.HiddenFor(x => x.User.UserID)
@Html.HiddenFor(x => x.Prescription.UserID)
<div class="row">
    <div class="col-md-12">
        <div class="card card-topline-theme">
            <div class="card-head">
                <header><i class="fa fa-medkit"></i> Prescriptions</header>
                <div class="tools">
                    <a class="t-collapse btn-color fa fa-chevron-down" href="javascript:;"></a>
                </div>
            </div>
            <div class="card-body ">
                <table class="table table-striped table-bordered table-hover table-checkable order-column valign-middle" id="example4">
                    <thead>
                        <tr>
                            <th class="center">Patient Name</th>
                            <th class="center"> Medication Name </th>
                            <th class="center"> Dose </th>
                            <th class="center"> Unit </th>
                            <th class="center"> Start Date </th>
                            <th class="center"> End Date </th>
                            <th class="center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (Model.PrescriptionList != null)
                            {
                                foreach (var item in Model.PrescriptionList)
                                {
                                    <tr class="odd gradeX">
                                        <td class="center">@item.Patient.FirstName</td>
                                        <td class="center">@item.Medicine.Name</td>
                                        <td class="center">@item.Dose</td>
                                        <td class="center">@item.Unit</td>
                                        <td class="center">@string.Format("{0:dd/MM/yyyy}", item.StartDate)</td>
                                        <td class="center">@string.Format("{0:dd/MM/yyyy}", item.EndDate)</td>
                                        <td>
                                            <button class="btn btn-primary btn-xs" onclick="EditPrescriptionById(@item.PatientPrescriptionID)">
                                                <i class="fa fa-pencil"></i>
                                            </button>
                                            <button class="btn btn-danger btn-xs" onclick="DeletePrescriptionById(@item.PatientPrescriptionID)">
                                                <i class="fa fa-trash-o "></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }

                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="preModel" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Update Prescription</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddorEditPrescription", "AdminDashboard", FormMethod.Post, new { id = "prescriptionform" }))
                {
                <div class="row">
                    @Html.HiddenFor(m => m.Prescription.PatientPrescriptionID)
                    @Html.HiddenFor(m => m.Prescription.PatientID)
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Patient Name</label><span class="required"> * </span>
                            @Html.DropDownListFor(m => m.Prescription.PatientID, new SelectList(Model.PatientList,"PatientID","FirstName"),
                                                "Select Patient",new { @class= "form-control input-height",autocomplete="off" })
                            @Html.ValidationMessageFor(x => x.Prescription.PatientID, "", new { @class = "text=danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Medication Name</label><span class="required"> * </span>
                            @Html.DropDownListFor(m => m.Prescription.MedicineID, new SelectList(Model.MedicineList,"MedicineID","Name"),
                                                            "Select Medicine",new { @class= "form-control input-height ",autocomplete="off" })
                            @Html.ValidationMessageFor(x => x.Prescription.MedicineID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Reason</label>
                                @Html.TextBoxFor(x => x.Prescription.Reason, new { @class = "form-control input-height", placeholder = "Reason", autocomplete = "off" })
                                @Html.ValidationMessageFor(x => x.Prescription.Reason, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Dose
                                </label>
                                @Html.TextBoxFor(x => x.Prescription.Dose, new { @class = "form-control input-height", placeholder = "Dose", autocomplete = "off" })
                                @Html.ValidationMessageFor(x => x.Prescription.Dose, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Unit</label>
                                @Html.DropDownListFor(x => x.Prescription.Unit, new List<SelectListItem>
                              {
                                   new SelectListItem{ Text="mg", Value = "mg" },
                                  new SelectListItem{ Text="ml", Value = "ml" }
                               },"Select Unit", new { @class = "form-control input-height", autocomplete = "off" })
                                @Html.ValidationMessageFor(x => x.Prescription.Unit, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Start Date</label>
                                <span class="required" aria-required="true"> * </span>
                                @Html.TextBoxFor(x => x.Prescription.StartDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-height", placeholder = "Start Date", autocomplete = "off", id = "startDate" })
                                @Html.ValidationMessageFor(x => x.Prescription.StartDate, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    End Date
                                </label>
                                @Html.TextBoxFor(x => x.Prescription.EndDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-height", placeholder = "End Date", autocomplete = "off", id = "endDate" })
                                @Html.ValidationMessageFor(x => x.Prescription.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Comments
                                </label>
                                @Html.TextAreaFor(x => x.Prescription.Comments, new { @class = "form-control input-height", placeholder = "Comments", rows = "4", autocomplete = "off" })
                                @Html.ValidationMessageFor(x => x.Prescription.Comments, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="footer">
                                <div class="pull-right">
                                    <button type="button" class="btn btn-dark" data-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-info">Save</button>
                                </div>

                            </div>
                        </div>
                    </div>
                }


            </div>
        </div>

    </div>
</div>

<script>
    $(function () {
        $("[id*=startDate]").datepicker(
            {
                changeYear: true,
                changeMonth: true,
                dateFormat: 'MM/dd/yy',
                minDate: new Date(),
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate());
                    $("[id*=endDate]").datepicker("option", "minDate", dt);
                }
            });
        $("[id*=endDate]").datepicker(
            {
                changeYear: true,
                changeMonth: true,
                dateFormat: 'MM/dd/yy',
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() - 1);
                    $("[id*=startDate]").datepicker("option", "maxDate", dt);
                }
            });
    });
</script>
